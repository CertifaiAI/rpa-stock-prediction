<Activity mc:Ignorable="sap sap2010" x:Class="TransformData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="date_" Type="InArgument(s:String[])" />
    <x:Property Name="open_" Type="InArgument(s:Double[])" />
    <x:Property Name="high_" Type="InArgument(s:Double[])" />
    <x:Property Name="low_" Type="InArgument(s:Double[])" />
    <x:Property Name="close_" Type="InArgument(s:Double[])" />
    <x:Property Name="adjclose_" Type="InArgument(s:Double[])" />
    <x:Property Name="volume_" Type="InArgument(s:Double[])" />
    <x:Property Name="average_" Type="InArgument(s:Double[])" />
    <x:Property Name="return_date" Type="OutArgument(x:String)" />
    <x:Property Name="return_open" Type="OutArgument(x:String)" />
    <x:Property Name="return_high" Type="OutArgument(x:String)" />
    <x:Property Name="return_low" Type="OutArgument(x:String)" />
    <x:Property Name="return_close" Type="OutArgument(x:String)" />
    <x:Property Name="return_adj" Type="OutArgument(x:String)" />
    <x:Property Name="return_volume" Type="OutArgument(x:String)" />
    <x:Property Name="return_average" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>800,2307.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TransformData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="TransformData" sap:VirtualizedContainerService.HintSize="780,2247.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Default="0" Name="i" />
      <Variable x:TypeArguments="x:String" Name="datestr" />
      <Variable x:TypeArguments="x:String" Name="openstr" />
      <Variable x:TypeArguments="x:String" Name="highstr" />
      <Variable x:TypeArguments="x:String" Name="lowstr" />
      <Variable x:TypeArguments="x:String" Name="closestr" />
      <Variable x:TypeArguments="x:String" Name="adjclosestr" />
      <Variable x:TypeArguments="x:String" Name="volumestr" />
      <Variable x:TypeArguments="x:String" Name="averagestr" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <While sap:VirtualizedContainerService.HintSize="738.4,1354.4" sap2010:WorkflowViewState.IdRef="While_1" Condition="[i &lt; 50]">
      <Sequence sap:VirtualizedContainerService.HintSize="693.6,1195.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[i = 49]" sap:VirtualizedContainerService.HintSize="652,1002.4" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="304,852.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign DateStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[datestr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[datestr + date_(i).ToString()]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign OpenStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[openstr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[openstr + open_(i).ToString()]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign HighStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[highstr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[highstr + high_(i).ToString()]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign LowStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[lowstr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[lowstr + low_(i).ToString()]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign CloseStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[closestr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[closestr + close_(i).ToString()]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign AdjStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[adjclosestr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[adjclosestr + adjclose_(i).ToString()]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign VolumeStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[volumestr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[volumestr + volume_(i).ToString()]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign AverageStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[averagestr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[averagestr + average_(i).ToString()]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="304,852.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign DateStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[datestr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[datestr + date_(i).ToString() + ","]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign OpenStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[openstr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[openstr + open_(i).ToString() + ","]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign HighStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[highstr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[highstr + high_(i).ToString() + ","]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign LowStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[lowstr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[lowstr + low_(i).ToString() + ","]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign CloseStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[closestr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[closestr + close_(i).ToString() + ","]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign AdjStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[adjclosestr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[adjclosestr + adjclose_(i).ToString() + ","]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign VolumeStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[volumestr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[volumestr + volume_(i).ToString() + ","]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign AverageStr" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[averagestr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[averagestr + average_(i).ToString() + ","]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
        <Assign sap:VirtualizedContainerService.HintSize="652,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[i + 1]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </While>
    <Assign DisplayName="return date str" sap:VirtualizedContainerService.HintSize="738.4,60" sap2010:WorkflowViewState.IdRef="Assign_18">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[return_date]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[datestr]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="return open str" sap:VirtualizedContainerService.HintSize="738.4,60" sap2010:WorkflowViewState.IdRef="Assign_19">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[return_open]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[openstr]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="return high str" sap:VirtualizedContainerService.HintSize="738.4,60" sap2010:WorkflowViewState.IdRef="Assign_20">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[return_high]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[highstr]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="return low str" sap:VirtualizedContainerService.HintSize="738.4,60" sap2010:WorkflowViewState.IdRef="Assign_21">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[return_low]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[lowstr]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="return close str" sap:VirtualizedContainerService.HintSize="738.4,60" sap2010:WorkflowViewState.IdRef="Assign_22">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[return_close]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[closestr]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="return adj str" sap:VirtualizedContainerService.HintSize="738.4,60" sap2010:WorkflowViewState.IdRef="Assign_23">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[return_adj]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[adjclosestr]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="return volume str" sap:VirtualizedContainerService.HintSize="738.4,60" sap2010:WorkflowViewState.IdRef="Assign_24">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[return_volume]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[volumestr]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="return average str" sap:VirtualizedContainerService.HintSize="738.4,60" sap2010:WorkflowViewState.IdRef="Assign_25">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[return_average]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[averagestr]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>